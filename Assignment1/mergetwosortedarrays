#include<bits/stdc++.h>
using namespace std;
vector<int>mergearrays(const vector<int>&first, const vector<int>&second)   //call by reference for optimisationif not every time we call this coppies of first and second is create waste of space
{
    int i=0,j=0,k=0;
    vector<int>result(first.size()+second.size());          //optimization size is declared before as we know it #concept of iszing of vectors
    while(i<first.size() && j<second.size())
    {
        if(first[i]<=second[j])
        {
            result[k]=first[i];
            i++;
        }
        else{
            result[k]=second[j];
            j++;
        }
        k++;
    }
    while(i<first.size())
    {
        result[k]=first[i];
        i++;
        k++;
    }
    while(j<second.size())
    {
        result[k]=second[j];
        j++;
        k++;
    }
  return result;
}
int main()
{
    vector<int>first={1,3,4,5,6,7};
    vector<int>second={2,4,5,15,18,19,21};
    vector<int>result=mergearrays(first,second);
    for(int i=0;i<result.size();i++)
    {
        cout<<result[i]<<" ";
    }
    return 0;
}
